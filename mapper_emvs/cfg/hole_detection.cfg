#!/usr/bin/env python
# Hole Detection parametrs

PACKAGE = "mapper_emvs"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()
gen.add("dimX", int_t, 0, "X dimension of the DSI",    346, 0,   346)
gen.add("dimY", int_t, 0, "Y dimension of the DSI",    260, 0,   260)
gen.add("dimZ", int_t, 0, "Z dimension of the DSI",    100, 0,   255)
gen.add("fov_deg", double_t, 0, "Field of view of the camera in degrees",    0, 0,   180)
gen.add("min_depth", double_t, 0, "Minimum depth in meters",    0.1, 0.0,   20.0)
gen.add("max_depth", double_t, 0, "Maximum depth in meters",    0.5, 0.0,   20.0)

gen.add("adaptive_threshold_kernel_size", int_t, 0, "Size of the Gaussian kernel used for adaptive thresholding.", 9, 0, 20)
gen.add("adaptive_threshold_c", double_t, 0, "A value in [0, 255]. The smaller the noisier and more dense reconstruction.", 41, 0.0, 255.0)
gen.add("median_filter_size", int_t, 0, "Size of the median filter used to clean the depth map.", 19, 0, 20)

gen.add("update_distance", double_t, 0, "Distance to generate a new keyframe.", 0.16, 0.01, 5.0)

gen.add("radius_search", double_t, 0, "Size of the radius filter.", 0.5, 0.005, 0.5)
gen.add("min_num_neighbors", int_t, 0, "Minimum number of points for the radius filter.", 19, 0, 20)

gen.add("leaf_size_x", double_t, 0, "voxel grid size on x", 0.1, 0.01, 3.0)
gen.add("leaf_size_y", double_t, 0, "voxel grid size on y", 0.1, 0.01, 3.0)
gen.add("leaf_size_z", double_t, 0, "voxel grid size on z", 0.1, 0.01, 3.0)

exit(gen.generate(PACKAGE, "mapper_emvs", "hole_generation"))
